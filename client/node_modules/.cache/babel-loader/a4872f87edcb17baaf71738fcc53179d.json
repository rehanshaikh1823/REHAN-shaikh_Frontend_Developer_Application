{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport JobBoardComponent from \"./components/JobBoardComponent\";\nimport { useState, useEffect } from \"react\";\nimport data from \"./assets/data.json\";\n\nfunction App() {\n  _s();\n\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, []);\n\n  const filterFunc = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [job.role, job.level];\n\n    if (job.tools) {\n      tags.push(...job.tools);\n    }\n\n    if (job.languages) {\n      tags.push(...job.languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const handleTagClick = tag => {\n    setFilters([...filters, tag]);\n  };\n\n  const filteredJobs = jobs.filter(filterFunc);\n  console.log(jobs); // console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"jobs are fetching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n      job: job\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 35\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"T1bJ6+v8uLWs7HpQF8UGJcCOzGE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/src/App.js"],"names":["JobBoardComponent","useState","useEffect","data","App","jobs","setJobs","filters","setFilters","filterFunc","role","level","tools","languages","length","tags","job","push","some","tag","includes","handleTagClick","filteredJobs","filter","console","log","map","id"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,iBAAP,MAA8B,gCAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACH,IAAD,CAAP;AACA,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMM,UAAU,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAAD,KAAuC;AACxD,QAAIN,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAO,IAAP;AACD;;AACD,UAAMC,IAAI,GAAG,CAACC,GAAG,CAACN,IAAL,EAAWM,GAAG,CAACL,KAAf,CAAb;;AACA,QAAIK,GAAG,CAACJ,KAAR,EAAe;AACbG,MAAAA,IAAI,CAACE,IAAL,CAAU,GAAGD,GAAG,CAACJ,KAAjB;AACD;;AACD,QAAII,GAAG,CAACH,SAAR,EAAmB;AACjBE,MAAAA,IAAI,CAACE,IAAL,CAAU,GAAGD,GAAG,CAACH,SAAjB;AACD;;AACD,WAAOE,IAAI,CAACG,IAAL,CAAWC,GAAD,IAASZ,OAAO,CAACa,QAAR,CAAiBD,GAAjB,CAAnB,CAAP;AACD,GAZD;;AAcA,QAAME,cAAc,GAAIF,GAAD,IAAS;AAC9BX,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaY,GAAb,CAAD,CAAV;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAGjB,IAAI,CAACkB,MAAL,CAAYd,UAAZ,CAArB;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ,EA7Ba,CA8Bb;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGA,IAAI,CAACS,MAAL,KAAgB,CAAhB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCQ,YAAY,CAACI,GAAb,CAAkBV,GAAD,iBAAS,QAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEA;AAAxB,OAAkCA,GAAG,CAACW,EAAtC;AAAA;AAAA;AAAA;AAAA,YAA1B;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAxCQvB,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport JobBoardComponent from \"./components/JobBoardComponent\";\nimport { useState, useEffect } from \"react\";\nimport data from \"./assets/data.json\";\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, []);\n\n  const filterFunc = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    const tags = [job.role, job.level];\n    if (job.tools) {\n      tags.push(...job.tools);\n    }\n    if (job.languages) {\n      tags.push(...job.languages);\n    }\n    return tags.some((tag) => filters.includes(tag));\n  };\n\n  const handleTagClick = (tag) => {\n    setFilters([...filters, tag]);\n  };\n\n  const filteredJobs = jobs.filter(filterFunc);\n\n  console.log(jobs);\n  // console.log(data);\n  return (\n    <div className=\"App\">\n      {jobs.length === 0 ? (\n        <p>jobs are fetching</p>\n      ) : (\n        filteredJobs.map((job) => <JobBoardComponent job={job} key={job.id} />)\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}