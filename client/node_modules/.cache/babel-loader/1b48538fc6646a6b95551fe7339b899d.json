{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useQuery, gql } from \"@apollo/client\";\n// import { LOAD_JOBS } from \"../GraphQL/Queries\";\n// import JobBoardComponent from \"./JobBoardComponent\";\n// const [jobs, setJobs] = useState(data.slice(0, 30));\n// const [filters, setFilters] = useState([]);\n//   // const filterFunc = ({ role, level, tools, languages }) => {\n//   //   if (filters.length === 0) {\n//   //     return true;\n//   //   }\n//   //   const tags = [role, level];\n//   //   if (tools) {\n//   //     tags.push(...tools);\n//   //   }\n//   //   if (languages) {\n//   //     tags.push(...languages);\n//   //   }\n//   //   return tags.some((tag) => filters.includes(tag));\n//   // };\n//   // const filteredJobs = jobs?.filter(filterFunc);\n//   // const handleTagClick = (tag) => {\n//   //   if (filters.includes(tag)) return;\n//   //   setFilters([...filters, tag]);\n//   // };\n//   // const handleFilterClick = (passedFilter) => {\n//   //   setFilters(filters.filter((f) => f !== passedFilter));\n//   // };\n//   return (\n//     <>\n//\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\n\nfunction GetAllJobs() {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    if (data) {\n      setJobs(data.getAllJob);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobs.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", val.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(GetAllJobs, \"eKaJZ4Yb+6kR/6F3zqf47r0YJzE=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetAllJobs;\nexport default GetAllJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllJobs\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js"],"names":["React","useEffect","useState","useQuery","gql","LOAD_JOBS","GetAllJobs","error","loading","data","jobs","setJobs","getAllJob","map","val","role"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,SAAD,CAAzC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,EAAU;AACRE,MAAAA,OAAO,CAACF,IAAI,CAACG,SAAN,CAAP;AACD;AACF,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;AAMA,sBACE;AAAA,2BACE;AAAA,gBACGC,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AACjB,4BAAO;AAAA,0BAAMA,GAAG,CAACC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+BD;;GAxCQT,U;UAC0BH,Q;;;KAD1BG,U;AA0CT,eAAeA,UAAf","sourcesContent":["// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useQuery, gql } from \"@apollo/client\";\n// import { LOAD_JOBS } from \"../GraphQL/Queries\";\n// import JobBoardComponent from \"./JobBoardComponent\";\n\n// const [jobs, setJobs] = useState(data.slice(0, 30));\n// const [filters, setFilters] = useState([]);\n\n//   // const filterFunc = ({ role, level, tools, languages }) => {\n//   //   if (filters.length === 0) {\n//   //     return true;\n//   //   }\n//   //   const tags = [role, level];\n//   //   if (tools) {\n//   //     tags.push(...tools);\n//   //   }\n//   //   if (languages) {\n//   //     tags.push(...languages);\n//   //   }\n//   //   return tags.some((tag) => filters.includes(tag));\n//   // };\n//   // const filteredJobs = jobs?.filter(filterFunc);\n//   // const handleTagClick = (tag) => {\n//   //   if (filters.includes(tag)) return;\n//   //   setFilters([...filters, tag]);\n//   // };\n//   // const handleFilterClick = (passedFilter) => {\n//   //   setFilters(filters.filter((f) => f !== passedFilter));\n//   // };\n\n//   return (\n//     <>\n//\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\n\nfunction GetAllJobs() {\n  const { error, loading, data } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    if (data) {\n      setJobs(data.getAllJob);\n    }\n  }, [data]);\n\n  return (\n    <>\n      <div>\n        {jobs.map((val) => {\n          return <h1> {val.role}</h1>;\n        })}\n      </div>\n      {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {filters?.length > 0 &&\n          filters.map((filter) => (\n            <span\n              onClick={() => handleFilterClick(filter)}\n              className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n            >\n              {filter}\n            </span>\n          ))}\n      </div>\n      {jobs.length === 0 ? (\n        <p>jobs are fetching</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent\n            job={job}\n            key={job.id}\n            handleTagClick={handleTagClick}\n          />\n        ))\n      )} */}\n    </>\n  );\n}\n\nexport default GetAllJobs;\n"]},"metadata":{},"sourceType":"module"}