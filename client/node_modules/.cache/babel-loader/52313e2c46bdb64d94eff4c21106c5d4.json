{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js\",\n    _s = $RefreshSig$();\n\n// const [jobs, setJobs] = useState(data.slice(0, 30));\n// const [filters, setFilters] = useState([]);\n// const filterFunc = ({ role, level, tools, languages }) => {\n//   if (filters.length === 0) {\n//     return true;\n//   }\n//   const tags = [role, level];\n//   if (tools) {\n//     tags.push(...tools);\n//   }\n//   if (languages) {\n//     tags.push(...languages);\n//   }\n//   return tags.some((tag) => filters.includes(tag));\n// };\n// const filteredJobs = jobs?.filter(filterFunc);\n// const handleTagClick = (tag) => {\n//   if (filters.includes(tag)) return;\n//   setFilters([...filters, tag]);\n// };\n// const handleFilterClick = (passedFilter) => {\n//   setFilters(filters.filter((f) => f !== passedFilter));\n// };\n//   return (\n//     <>\n//\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport JobBoardComponent from \"./JobBoardComponent\";\n\nfunction GetAllJobs() {\n  _s();\n\n  var _filters;\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState([]);\n\n  const filterFunc = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const filteredJobs = jobs === null || jobs === void 0 ? void 0 : jobs.filter(filterFunc);\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  };\n\n  useEffect(() => {\n    if (data) {\n      setJobs(data.getAllJob);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: jobs.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", val.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-white shadow-md my-16 mx-10 p-6 rounded\",\n      children: ((_filters = filters) === null || _filters === void 0 ? void 0 : _filters.length) > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleFilterClick(filter),\n        className: \"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\",\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"jobs are fetching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n      job: job,\n      handleTagClick: handleTagClick\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n\n_s(GetAllJobs, \"eKaJZ4Yb+6kR/6F3zqf47r0YJzE=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetAllJobs;\nexport default GetAllJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllJobs\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js"],"names":["React","useEffect","useState","useQuery","gql","LOAD_JOBS","JobBoardComponent","GetAllJobs","error","loading","data","jobs","setJobs","filterFunc","role","level","tools","languages","filters","length","tags","push","some","tag","includes","filteredJobs","filter","handleTagClick","setFilters","handleFilterClick","passedFilter","f","getAllJob","map","val","job","id"],"mappings":"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","sourcesContent":["// const [jobs, setJobs] = useState(data.slice(0, 30));\n// const [filters, setFilters] = useState([]);\n\n// const filterFunc = ({ role, level, tools, languages }) => {\n//   if (filters.length === 0) {\n//     return true;\n//   }\n//   const tags = [role, level];\n//   if (tools) {\n//     tags.push(...tools);\n//   }\n//   if (languages) {\n//     tags.push(...languages);\n//   }\n//   return tags.some((tag) => filters.includes(tag));\n// };\n// const filteredJobs = jobs?.filter(filterFunc);\n// const handleTagClick = (tag) => {\n//   if (filters.includes(tag)) return;\n//   setFilters([...filters, tag]);\n// };\n// const handleFilterClick = (passedFilter) => {\n//   setFilters(filters.filter((f) => f !== passedFilter));\n// };\n\n//   return (\n//     <>\n//\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport JobBoardComponent from \"./JobBoardComponent\";\n\nfunction GetAllJobs() {\n  const { error, loading, data } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState([]);\n\n  const filterFunc = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    const tags = [role, level];\n    if (tools) {\n      tags.push(...tools);\n    }\n    if (languages) {\n      tags.push(...languages);\n    }\n    return tags.some((tag) => filters.includes(tag));\n  };\n  const filteredJobs = jobs?.filter(filterFunc);\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !== passedFilter));\n  };\n  useEffect(() => {\n    if (data) {\n      setJobs(data.getAllJob);\n    }\n  }, [data]);\n\n  return (\n    <>\n      <div>\n        {jobs.map((val) => {\n          return <h1> {val.role}</h1>;\n        })}\n      </div>\n      <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {filters?.length > 0 &&\n          filters.map((filter) => (\n            <span\n              onClick={() => handleFilterClick(filter)}\n              className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n            >\n              {filter}\n            </span>\n          ))}\n      </div>\n      {jobs.length === 0 ? (\n        <p>jobs are fetching</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent\n            job={job}\n            key={job.id}\n            handleTagClick={handleTagClick}\n          />\n        ))\n      )}\n    </>\n  );\n}\n\nexport default GetAllJobs;\n"]},"metadata":{},"sourceType":"module"}