{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport JobBoardComponent from \"./JobBoardComponent\"; // import Pagination from \"./Pagination\";\n\nfunction GetAllJobs() {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  const filterFunc = ({\n    level,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [level];\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const filteredJobs = jobs === null || jobs === void 0 ? void 0 : jobs.filter(filterFunc);\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  };\n\n  useEffect(() => {\n    if (data) {\n      setJobs(data.getAllJob);\n    } else if (error) {\n      console.log(error);\n    } else if (loading) {\n      console.log(loading);\n    }\n  }, [data, error, loading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-white shadow-md my-16 mx-10 p-6 rounded\",\n      children: (filters === null || filters === void 0 ? void 0 : filters.length) > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleFilterClick(filter),\n        className: \"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\",\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"jobs are fetching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n      job: job,\n      handleTagClick: handleTagClick\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n}\n\n_s(GetAllJobs, \"8c/EmWuzUQRzlcitU5MDb2AyTB8=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetAllJobs;\nexport default GetAllJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllJobs\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js"],"names":["React","useEffect","useState","useQuery","LOAD_JOBS","JobBoardComponent","GetAllJobs","error","loading","data","jobs","setJobs","filters","setFilters","filterFunc","level","languages","length","tags","push","some","tag","includes","filteredJobs","filter","handleTagClick","handleFilterClick","passedFilter","f","getAllJob","console","log","map","job","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CACA;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,SAAD,CAAzC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMY,UAAU,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAA0B;AAC3C,QAAIJ,OAAO,CAACK,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAO,IAAP;AACD;;AACD,UAAMC,IAAI,GAAG,CAACH,KAAD,CAAb;;AAEA,QAAIC,SAAJ,EAAe;AACbE,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGH,SAAb;AACD;;AACD,WAAOE,IAAI,CAACE,IAAL,CAAWC,GAAD,IAAST,OAAO,CAACU,QAAR,CAAiBD,GAAjB,CAAnB,CAAP;AACD,GAVD;;AAWA,QAAME,YAAY,GAAGb,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEc,MAAN,CAAaV,UAAb,CAArB;;AACA,QAAMW,cAAc,GAAIJ,GAAD,IAAS;AAC9B,QAAIT,OAAO,CAACU,QAAR,CAAiBD,GAAjB,CAAJ,EAA2B;AAC3BR,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaS,GAAb,CAAD,CAAV;AACD,GAHD;;AAIA,QAAMK,iBAAiB,GAAIC,YAAD,IAAkB;AAC1Cd,IAAAA,UAAU,CAACD,OAAO,CAACY,MAAR,CAAgBI,CAAD,IAAOA,CAAC,KAAKD,YAA5B,CAAD,CAAV;AACD,GAFD;;AAGA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,IAAJ,EAAU;AACRE,MAAAA,OAAO,CAACF,IAAI,CAACoB,SAAN,CAAP;AACD,KAFD,MAEO,IAAItB,KAAJ,EAAW;AAChBuB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAZ;AACD,KAFM,MAEA,IAAIC,OAAJ,EAAa;AAClBsB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,OAAZ;AACD;AACF,GARQ,EAQN,CAACC,IAAD,EAAOF,KAAP,EAAcC,OAAd,CARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAA,gBACG,CAAAI,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,MAAT,IAAkB,CAAlB,IACCL,OAAO,CAACoB,GAAR,CAAaR,MAAD,iBACV;AACE,QAAA,OAAO,EAAE,MAAME,iBAAiB,CAACF,MAAD,CADlC;AAEE,QAAA,SAAS,EAAC,qDAFZ;AAAA,kBAIGA;AAJH;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,EAYGd,IAAI,CAACO,MAAL,KAAgB,CAAhB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCM,YAAY,CAACS,GAAb,CAAkBC,GAAD,iBACf,QAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAGE,MAAA,cAAc,EAAER;AAHlB,OAEOQ,GAAG,CAACC,EAFX;AAAA;AAAA;AAAA;AAAA,YADF,CAfJ;AAAA,kBADF;AA2BD;;GA7DQ5B,U;UAC0BH,Q;;;KAD1BG,U;AA+DT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport JobBoardComponent from \"./JobBoardComponent\";\n// import Pagination from \"./Pagination\";\n\nfunction GetAllJobs() {\n  const { error, loading, data } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  const filterFunc = ({ level, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    const tags = [level];\n\n    if (languages) {\n      tags.push(...languages);\n    }\n    return tags.some((tag) => filters.includes(tag));\n  };\n  const filteredJobs = jobs?.filter(filterFunc);\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !== passedFilter));\n  };\n  useEffect(() => {\n    if (data) {\n      setJobs(data.getAllJob);\n    } else if (error) {\n      console.log(error);\n    } else if (loading) {\n      console.log(loading);\n    }\n  }, [data, error, loading]);\n\n  return (\n    <>\n      <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {filters?.length > 0 &&\n          filters.map((filter) => (\n            <span\n              onClick={() => handleFilterClick(filter)}\n              className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n            >\n              {filter}\n            </span>\n          ))}\n      </div>\n      {jobs.length === 0 ? (\n        <p>jobs are fetching</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent\n            job={job}\n            key={job.id}\n            handleTagClick={handleTagClick}\n          />\n        ))\n      )}\n      {/* <Pagination /> */}\n    </>\n  );\n}\n\nexport default GetAllJobs;\n"]},"metadata":{},"sourceType":"module"}