{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport data from \"../MOCK_DATA.json\";\nimport JobBoardComponent from \"./JobBoardComponent\";\n\nconst GetAllJobs = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    gdata\n  } = useQuery(LOAD_JOBS);\n  const [gjobs, setgJobs] = useState([]);\n  const [jobs, setJobs] = useState(data.slice(0, 30));\n  const [filters, setFilters] = useState([]);\n\n  const filterFunc = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const filteredJobs = jobs === null || jobs === void 0 ? void 0 : jobs.filter(filterFunc);\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  };\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, [data]);\n  useEffect(() => {\n    setgJobs(gdata.getAllJob);\n    return () => {};\n  }, [gdata]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(\"type of gdata \" + typeof gdata), console.log(\"type of gdata \" + typeof gjobs), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-white shadow-md my-16 mx-10 p-6 rounded\",\n      children: (filters === null || filters === void 0 ? void 0 : filters.length) > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleFilterClick(filter),\n        className: \"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\",\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \" \", jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"jobs are fetching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n      job: job,\n      handleTagClick: handleTagClick\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n\n_s(GetAllJobs, \"Rvqh0cWdYV1delXNDn7y5Xxexlk=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetAllJobs;\nexport default GetAllJobs; // {typeof jobs != \"undefined\" ? (\n//     <>\n//       <h1>{typeof jobs}</h1>\n//       {console.log(jobs.getAllJob[2].id)}\n//       {/* <h1>{jobs}</h1> */}\n//     </>\n//   ) : (\n//     // jobs.map((job) => console.log(jobs))\n//     console.log(\"data is fetching\")\n//   )}\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllJobs\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js"],"names":["React","useState","useEffect","useQuery","gql","LOAD_JOBS","data","JobBoardComponent","GetAllJobs","error","loading","gdata","gjobs","setgJobs","jobs","setJobs","slice","filters","setFilters","filterFunc","role","level","tools","languages","length","tags","push","some","tag","includes","filteredJobs","filter","handleTagClick","handleFilterClick","passedFilter","f","getAllJob","console","log","map","job","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\n\nimport data from \"../MOCK_DATA.json\";\n\nimport JobBoardComponent from \"./JobBoardComponent\";\n\nconst GetAllJobs = () => {\n  const { error, loading, gdata } = useQuery(LOAD_JOBS);\n  const [gjobs, setgJobs] = useState([]);\n  const [jobs, setJobs] = useState(data.slice(0, 30));\n  const [filters, setFilters] = useState([]);\n\n  const filterFunc = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    const tags = [role, level];\n    if (tools) {\n      tags.push(...tools);\n    }\n    if (languages) {\n      tags.push(...languages);\n    }\n    return tags.some((tag) => filters.includes(tag));\n  };\n  const filteredJobs = jobs?.filter(filterFunc);\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !== passedFilter));\n  };\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, [data]);\n\n  useEffect(() => {\n    setgJobs(gdata.getAllJob);\n    return () => {};\n  }, [gdata]);\n\n  return (\n    <>\n      {/* graphql data */}\n      {console.log(\"type of gdata \" + typeof gdata)}\n      {console.log(\"type of gdata \" + typeof gjobs)}\n      <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {filters?.length > 0 &&\n          filters.map((filter) => (\n            <span\n              onClick={() => handleFilterClick(filter)}\n              className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n            >\n              {filter}\n            </span>\n          ))}\n      </div>{\" \"}\n      {jobs.length === 0 ? (\n        <p>jobs are fetching</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent\n            job={job}\n            key={job.id}\n            handleTagClick={handleTagClick}\n          />\n        ))\n      )}\n    </>\n  );\n};\n\nexport default GetAllJobs;\n\n// {typeof jobs != \"undefined\" ? (\n//     <>\n//       <h1>{typeof jobs}</h1>\n//       {console.log(jobs.getAllJob[2].id)}\n//       {/* <h1>{jobs}</h1> */}\n//     </>\n//   ) : (\n//     // jobs.map((job) => console.log(jobs))\n//     console.log(\"data is fetching\")\n//   )}\n"]},"metadata":{},"sourceType":"module"}