{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport JobBoardComponent from \"./JobBoardComponent\";\n\nconst GetAllJobs = () => {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState(); //   const [jobs, setJobs] = useState(data.slice(0, 30));\n  //   const [filters, setFilters] = useState([]);\n  //   const filterFunc = ({ role, level, tools, languages }) => {\n  //     if (filters.length === 0) {\n  //       return true;\n  //     }\n  //     const tags = [role, level];\n  //     if (tools) {\n  //       tags.push(...tools);\n  //     }\n  //     if (languages) {\n  //       tags.push(...languages);\n  //     }\n  //     return tags.some((tag) => filters.includes(tag));\n  //   };\n  //   const filteredJobs = jobs?.filter(filterFunc);\n  //   const handleTagClick = (tag) => {\n  //     if (filters.includes(tag)) return;\n  //     setFilters([...filters, tag]);\n  //   };\n  //   const handleFilterClick = (passedFilter) => {\n  //     setFilters(filters.filter((f) => f !== passedFilter));\n  //   };\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: typeof jobs != \"undefined\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: typeof jobs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), console.log(jobs)]\n    }, void 0, true) : // jobs.map((job) => console.log(jobs))\n    console.log(\"data is fetching\")\n  }, void 0, false);\n};\n\n_s(GetAllJobs, \"gxMgfaE9wpuXrGlr83TzMGG3/P8=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetAllJobs;\nexport default GetAllJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllJobs\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js"],"names":["React","useState","useEffect","useQuery","gql","LOAD_JOBS","JobBoardComponent","GetAllJobs","error","loading","data","jobs","setJobs","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,SAAD,CAAzC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC,CAFuB,CAGvB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACF,IAAD,CAAP;AACA,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;AAKA,sBACE;AAAA,cACG,OAAOC,IAAP,IAAe,WAAf,gBACC;AAAA,8BACE;AAAA,kBAAK,OAAOA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,EAEGE,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAFH;AAAA,oBADD,GAOC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AATJ,mBADF;AAqCD,CAtED;;GAAMP,U;UAC6BJ,Q;;;KAD7BI,U;AAwEN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\n\nimport JobBoardComponent from \"./JobBoardComponent\";\n\nconst GetAllJobs = () => {\n  const { error, loading, data } = useQuery(LOAD_JOBS);\n  const [jobs, setJobs] = useState();\n  //   const [jobs, setJobs] = useState(data.slice(0, 30));\n  //   const [filters, setFilters] = useState([]);\n\n  //   const filterFunc = ({ role, level, tools, languages }) => {\n  //     if (filters.length === 0) {\n  //       return true;\n  //     }\n  //     const tags = [role, level];\n  //     if (tools) {\n  //       tags.push(...tools);\n  //     }\n  //     if (languages) {\n  //       tags.push(...languages);\n  //     }\n  //     return tags.some((tag) => filters.includes(tag));\n  //   };\n  //   const filteredJobs = jobs?.filter(filterFunc);\n  //   const handleTagClick = (tag) => {\n  //     if (filters.includes(tag)) return;\n  //     setFilters([...filters, tag]);\n  //   };\n  //   const handleFilterClick = (passedFilter) => {\n  //     setFilters(filters.filter((f) => f !== passedFilter));\n  //   };\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, [data]);\n\n  return (\n    <>\n      {typeof jobs != \"undefined\" ? (\n        <>\n          <h1>{typeof jobs}</h1>\n          {console.log(jobs)}\n          {/* <h1>{jobs}</h1> */}\n        </>\n      ) : (\n        // jobs.map((job) => console.log(jobs))\n        console.log(\"data is fetching\")\n      )}\n\n      {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {filters?.length > 0 &&\n          filters.map((filter) => (\n            <span\n              onClick={() => handleFilterClick(filter)}\n              className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n            >\n              {filter}\n            </span>\n          ))}\n      </div> */}\n      {/* {jobs.length === 0 ? (\n        <p>jobs are fetching</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent\n            job={job}\n            key={job.id}\n            handleTagClick={handleTagClick}\n          />\n        ))\n      )} */}\n    </>\n  );\n};\n\nexport default GetAllJobs;\n"]},"metadata":{},"sourceType":"module"}