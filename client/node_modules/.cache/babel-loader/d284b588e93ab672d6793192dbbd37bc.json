{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/App.js\";\nimport \"./App.css\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport ROUTES, { RenderRoutes } from \"./routes\";\nconst errorLink = onError(({\n  graphqlErrors,\n  networkError\n}) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({\n      message,\n      location,\n      path\n    }) => {\n      return `Graphql error ${message}  ${location} ${path}`;\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:3005/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(RenderRoutes, {\n        routes: ROUTES\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/App.js"],"names":["ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","ROUTES","RenderRoutes","errorLink","graphqlErrors","networkError","map","message","location","path","link","uri","client","cache","App"],"mappings":";;AAAA,OAAO,WAAP;AACA,SACEA,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,IALF,QAMO,gBANP;AAOA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,MAAP,IAAiBC,YAAjB,QAAqC,UAArC;AAEA,MAAMC,SAAS,GAAGH,OAAO,CAAC,CAAC;AAAEI,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAqC;AAC7D,MAAID,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACE,GAAd,CAAkB,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,KAAD,KAAiC;AACjD,aAAQ,iBAAgBF,OAAQ,KAAIC,QAAS,IAAGC,IAAK,EAArD;AACD,KAFD;AAGD;AACF,CANwB,CAAzB;AAQA,MAAMC,IAAI,GAAGX,IAAI,CAAC,CAChBI,SADgB,EAEhB,IAAIL,QAAJ,CAAa;AAAEa,EAAAA,GAAG,EAAE;AAAP,CAAb,CAFgB,CAAD,CAAjB;AAKA,MAAMC,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC9BkB,EAAAA,KAAK,EAAE,IAAIjB,aAAJ,EADuB;AAE9Bc,EAAAA,IAAI,EAAEA;AAFwB,CAAjB,CAAf;;AAKA,SAASI,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEF,MAAxB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEX;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQa,G;AAUT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport ROUTES, { RenderRoutes } from \"./routes\";\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      return `Graphql error ${message}  ${location} ${path}`;\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:3005/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <RenderRoutes routes={ROUTES} />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}