{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport data from \"../MOCK_DATA.json\";\nimport JobBoardComponent from \"./JobBoardComponent\"; // const GetAllJobs = () => {\n//   const { error, loading, gdata } = useQuery(LOAD_JOBS);\n//   const [gjobs, setgJobs] = useState([]);\n//   const [jobs, setJobs] = useState(data.slice(0, 30));\n//   const [filters, setFilters] = useState([]);\n//   const filterFunc = ({ role, level, tools, languages }) => {\n//     if (filters.length === 0) {\n//       return true;\n//     }\n//     const tags = [role, level];\n//     if (tools) {\n//       tags.push(...tools);\n//     }\n//     if (languages) {\n//       tags.push(...languages);\n//     }\n//     return tags.some((tag) => filters.includes(tag));\n//   };\n//   const filteredJobs = jobs?.filter(filterFunc);\n//   const handleTagClick = (tag) => {\n//     if (filters.includes(tag)) return;\n//     setFilters([...filters, tag]);\n//   };\n//   const handleFilterClick = (passedFilter) => {\n//     setFilters(filters.filter((f) => f !== passedFilter));\n//   };\n//   useEffect(() => {\n//     if (data) {\n//       setJobs(data);\n//     }\n//   }, [data]);\n//   useEffect(() => {\n//     if (gdata) {\n//       setgJobs(gdata.getAllJob);\n//     }\n//   }, [gdata]);\n//   return (\n//     <>\n//       {/* graphql data */}\n//       <div>x{console.log(gjobs)}</div>\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\n// export default GetAllJobs;\n// // {typeof jobs != \"undefined\" ? (\n// //     <>\n// //       <h1>{typeof jobs}</h1>\n// //       {console.log(jobs.getAllJob[2].id)}\n// //       {/* <h1>{jobs}</h1> */}\n// //     </>\n// //   ) : (\n// //     // jobs.map((job) => console.log(jobs))\n// //     console.log(\"data is fetching\")\n// //   )}\n\nfunction GetAllJobs() {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useQuery(LOAD_JOBS);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (data) {\n      setUsers(data.getAllJob);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: users.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [val.role, console.log(val)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GetAllJobs, \"INVcvgjol47Nx01vrgAq9x9IhFs=\", false, function () {\n  return [useQuery];\n});\n\n_c = GetAllJobs;\nexport default GetAllJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAllJobs\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js"],"names":["React","useState","useEffect","useQuery","gql","LOAD_JOBS","data","JobBoardComponent","GetAllJobs","error","loading","users","setUsers","getAllJob","map","val","role","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBJ,IAAAA;AAAlB,MAA2BH,QAAQ,CAACE,SAAD,CAAzC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,IAAJ,EAAU;AACRM,MAAAA,QAAQ,CAACN,IAAI,CAACO,SAAN,CAAR;AACD;AACF,GAJQ,EAIN,CAACP,IAAD,CAJM,CAAT;AAMA,sBACE;AAAA,cACGK,KAAK,CAACG,GAAN,CAAWC,GAAD,IAAS;AAClB,0BACE;AAAA,mBACGA,GAAG,CAACC,IADP,EAEGC,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBQP,U;UAC0BL,Q;;;KAD1BK,U;AAuBT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { LOAD_JOBS } from \"../GraphQL/Queries\";\nimport data from \"../MOCK_DATA.json\";\nimport JobBoardComponent from \"./JobBoardComponent\";\n\n// const GetAllJobs = () => {\n//   const { error, loading, gdata } = useQuery(LOAD_JOBS);\n//   const [gjobs, setgJobs] = useState([]);\n//   const [jobs, setJobs] = useState(data.slice(0, 30));\n//   const [filters, setFilters] = useState([]);\n\n//   const filterFunc = ({ role, level, tools, languages }) => {\n//     if (filters.length === 0) {\n//       return true;\n//     }\n//     const tags = [role, level];\n//     if (tools) {\n//       tags.push(...tools);\n//     }\n//     if (languages) {\n//       tags.push(...languages);\n//     }\n//     return tags.some((tag) => filters.includes(tag));\n//   };\n//   const filteredJobs = jobs?.filter(filterFunc);\n//   const handleTagClick = (tag) => {\n//     if (filters.includes(tag)) return;\n//     setFilters([...filters, tag]);\n//   };\n//   const handleFilterClick = (passedFilter) => {\n//     setFilters(filters.filter((f) => f !== passedFilter));\n//   };\n\n//   useEffect(() => {\n//     if (data) {\n//       setJobs(data);\n//     }\n//   }, [data]);\n\n//   useEffect(() => {\n//     if (gdata) {\n//       setgJobs(gdata.getAllJob);\n//     }\n//   }, [gdata]);\n\n//   return (\n//     <>\n//       {/* graphql data */}\n//       <div>x{console.log(gjobs)}</div>\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\n\n// export default GetAllJobs;\n\n// // {typeof jobs != \"undefined\" ? (\n// //     <>\n// //       <h1>{typeof jobs}</h1>\n// //       {console.log(jobs.getAllJob[2].id)}\n// //       {/* <h1>{jobs}</h1> */}\n// //     </>\n// //   ) : (\n// //     // jobs.map((job) => console.log(jobs))\n// //     console.log(\"data is fetching\")\n// //   )}\n\nfunction GetAllJobs() {\n  const { error, loading, data } = useQuery(LOAD_JOBS);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (data) {\n      setUsers(data.getAllJob);\n    }\n  }, [data]);\n\n  return (\n    <div>\n      {users.map((val) => {\n        return (\n          <h1>\n            {val.role}\n            {console.log(val)}\n          </h1>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default GetAllJobs;\n"]},"metadata":{},"sourceType":"module"}