{"ast":null,"code":"// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useQuery, gql } from \"@apollo/client\";\n// import { LOAD_JOBS } from \"../GraphQL/Queries\";\n// import JobBoardComponent from \"./JobBoardComponent\";\n// const GetAllJobs = () => {\n//   const { error, loading, data } = useQuery(LOAD_JOBS);\n//   const [jobs, setJobs] = useState([]);\n//   const [users, setUsers] = useState([]);\n//   // const [jobs, setJobs] = useState(data.slice(0, 30));\n//   // const [filters, setFilters] = useState([]);\n//   // const filterFunc = ({ role, level, tools, languages }) => {\n//   //   if (filters.length === 0) {\n//   //     return true;\n//   //   }\n//   //   const tags = [role, level];\n//   //   if (tools) {\n//   //     tags.push(...tools);\n//   //   }\n//   //   if (languages) {\n//   //     tags.push(...languages);\n//   //   }\n//   //   return tags.some((tag) => filters.includes(tag));\n//   // };\n//   // const filteredJobs = jobs?.filter(filterFunc);\n//   // const handleTagClick = (tag) => {\n//   //   if (filters.includes(tag)) return;\n//   //   setFilters([...filters, tag]);\n//   // };\n//   // const handleFilterClick = (passedFilter) => {\n//   //   setFilters(filters.filter((f) => f !== passedFilter));\n//   // };\n//   // useEffect(() => {\n//   //   if (data) {\n//   //     setJobs(data);\n//   //   }\n//   // }, [data]);\n//   useEffect(() => {\n//     if (data) {\n//       setUsers(data.getAllUser);\n//     }\n//   }, [data]);\n//   return (\n//     <>\n//       {/* graphql data */}\n//       <div>\n//         {users.map((val) => {\n//           return <h1> {val.firstName}</h1>;\n//         })}\n//       </div>\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\n// export default GetAllJobs;","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/components/GetAllJobs.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useQuery, gql } from \"@apollo/client\";\n// import { LOAD_JOBS } from \"../GraphQL/Queries\";\n// import JobBoardComponent from \"./JobBoardComponent\";\n\n// const GetAllJobs = () => {\n//   const { error, loading, data } = useQuery(LOAD_JOBS);\n//   const [jobs, setJobs] = useState([]);\n//   const [users, setUsers] = useState([]);\n\n//   // const [jobs, setJobs] = useState(data.slice(0, 30));\n//   // const [filters, setFilters] = useState([]);\n\n//   // const filterFunc = ({ role, level, tools, languages }) => {\n//   //   if (filters.length === 0) {\n//   //     return true;\n//   //   }\n//   //   const tags = [role, level];\n//   //   if (tools) {\n//   //     tags.push(...tools);\n//   //   }\n//   //   if (languages) {\n//   //     tags.push(...languages);\n//   //   }\n//   //   return tags.some((tag) => filters.includes(tag));\n//   // };\n//   // const filteredJobs = jobs?.filter(filterFunc);\n//   // const handleTagClick = (tag) => {\n//   //   if (filters.includes(tag)) return;\n//   //   setFilters([...filters, tag]);\n//   // };\n//   // const handleFilterClick = (passedFilter) => {\n//   //   setFilters(filters.filter((f) => f !== passedFilter));\n//   // };\n\n//   // useEffect(() => {\n//   //   if (data) {\n//   //     setJobs(data);\n//   //   }\n//   // }, [data]);\n\n//   useEffect(() => {\n//     if (data) {\n//       setUsers(data.getAllUser);\n//     }\n//   }, [data]);\n\n//   return (\n//     <>\n//       {/* graphql data */}\n//       <div>\n//         {users.map((val) => {\n//           return <h1> {val.firstName}</h1>;\n//         })}\n//       </div>\n//       {/* <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n//         {filters?.length > 0 &&\n//           filters.map((filter) => (\n//             <span\n//               onClick={() => handleFilterClick(filter)}\n//               className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n//             >\n//               {filter}\n//             </span>\n//           ))}\n//       </div>\n//       {jobs.length === 0 ? (\n//         <p>jobs are fetching</p>\n//       ) : (\n//         filteredJobs.map((job) => (\n//           <JobBoardComponent\n//             job={job}\n//             key={job.id}\n//             handleTagClick={handleTagClick}\n//           />\n//         ))\n//       )} */}\n//     </>\n//   );\n// };\n\n// export default GetAllJobs;\n"]},"metadata":{},"sourceType":"module"}