{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport JobBoardComponent from \"./components/JobBoardComponent\";\nimport { useState, useEffect } from \"react\";\nimport data from \"./assets/data.json\";\nimport ReactPaginate from \"react-paginate\";\n\nfunction App() {\n  _s();\n\n  const [jobs, setJobs] = useState(data.slice(0, 30));\n  const [filters, setFilters] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const jobsPerPage = 5;\n  const pagesVisited = pageNumber * jobsPerPage;\n  const filteredJobs = jobs.filter(filterFunc);\n\n  const changePage = ({\n    selected\n  }) => {\n    setPageNumber(selected);\n  };\n\n  const filterFunc = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  };\n\n  const pageCount = Math.ceil(jobs.length / jobsPerPage);\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, []);\n  const displayJobs = jobs.slice(pagesVisited, pagesVisited + jobsPerPage).map(job => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n        job: job,\n        handleTagClick: handleTagClick\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-white shadow-md my-16 mx-10 p-6 rounded\",\n      children: filters.length > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleFilterClick(filter),\n        className: \"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\",\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"jobs are fetching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: displayJobs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationBttns\",\n      previousLinkClassName: \"pretviousBttn\",\n      nextLinkClassName: \"nextBttn\",\n      disabledClassName: \"paginationDisabled\",\n      activeClassName: \"paginationActive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wvsepXb+H1+Iko5QnoqzB2oU9dg=\");\n\n_c = App;\nexport default App; // filteredJobs.map((job) => (\n//   <JobBoardComponent\n//     job={job}\n//     key={job.id}\n//     handleTagClick={handleTagClick}\n//   />\n// ))\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/src/App.js"],"names":["JobBoardComponent","useState","useEffect","data","ReactPaginate","App","jobs","setJobs","slice","filters","setFilters","pageNumber","setPageNumber","jobsPerPage","pagesVisited","filteredJobs","filter","filterFunc","changePage","selected","role","level","tools","languages","length","tags","push","some","tag","includes","handleTagClick","handleFilterClick","passedFilter","f","pageCount","Math","ceil","displayJobs","map","job","id"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport JobBoardComponent from \"./components/JobBoardComponent\";\nimport { useState, useEffect } from \"react\";\nimport data from \"./assets/data.json\";\nimport ReactPaginate from \"react-paginate\";\nfunction App() {\n  const [jobs, setJobs] = useState(data.slice(0, 30));\n  const [filters, setFilters] = useState([]);\n  const [pageNumber, setPageNumber] = useState(0);\n\n  const jobsPerPage = 5;\n  const pagesVisited = pageNumber * jobsPerPage;\n\n  const filteredJobs = jobs.filter(filterFunc);\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  const filterFunc = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    const tags = [role, level];\n    if (tools) {\n      tags.push(...tools);\n    }\n    if (languages) {\n      tags.push(...languages);\n    }\n    return tags.some((tag) => filters.includes(tag));\n  };\n\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !== passedFilter));\n  };\n\n  const pageCount = Math.ceil(jobs.length / jobsPerPage);\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, []);\n  const displayJobs = jobs\n    .slice(pagesVisited, pagesVisited + jobsPerPage)\n    .map((job) => {\n      return (\n        <div className=\"user\">\n          {filteredJobs.map((job) => (\n            <JobBoardComponent\n              job={job}\n              key={job.id}\n              handleTagClick={handleTagClick}\n            />\n          ))}\n        </div>\n      );\n    });\n\n  return (\n    <div className=\"App\">\n      <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {filters.length > 0 &&\n          filters.map((filter) => (\n            <span\n              onClick={() => handleFilterClick(filter)}\n              className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n            >\n              {filter}\n            </span>\n          ))}\n      </div>\n      {jobs.length === 0 ? <p>jobs are fetching</p> : <div>{displayJobs}</div>}\n\n      <ReactPaginate\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"pretviousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      />\n    </div>\n  );\n}\n\nexport default App;\n// filteredJobs.map((job) => (\n//   <JobBoardComponent\n//     job={job}\n//     key={job.id}\n//     handleTagClick={handleTagClick}\n//   />\n// ))\n"]},"metadata":{},"sourceType":"module"}