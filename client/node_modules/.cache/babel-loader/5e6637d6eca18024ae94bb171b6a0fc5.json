{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arehan/Desktop/job-portal/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport JobBoardComponent from \"./components/JobBoardComponent\";\nimport { useState, useEffect } from \"react\";\nimport data from \"./assets/data.json\";\nimport ReactPaginate from \"react-paginate\";\n\nfunction App() {\n  _s();\n\n  const [jobs, setJobs] = useState(data.slice(0, 30));\n  const [filters, setFilters] = useState([]); // const [pageNumber, setPageNumber] = useState(0);\n\n  const jobsPerPage = 5;\n  const pagesVisited = pageNumber * jobsPerPage;\n\n  const changePage = ({\n    selected\n  }) => {\n    setPageNumber(selected);\n  };\n\n  const filterFunc = ({\n    role,\n    level,\n    tools,\n    languages\n  }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if (tools) {\n      tags.push(...tools);\n    }\n\n    if (languages) {\n      tags.push(...languages);\n    }\n\n    return tags.some(tag => filters.includes(tag));\n  };\n\n  const filteredJobs = jobs.filter(filterFunc);\n\n  const handleTagClick = tag => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n\n  const handleFilterClick = passedFilter => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  }; // const pageCount = Math.ceil(jobs.length / jobsPerPage);\n\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, []); // const displayJobs = jobs\n  //   .slice(pagesVisited, pagesVisited + jobsPerPage)\n  //   .map((job) => {\n  //     return (\n  //       <div className=\"user\">\n  //         {\n  //           // filteredJobs.map((x) => (\n  //           //   <JobBoardComponent\n  //           //     job={x}\n  //           //     key={x.id}\n  //           //     handleTagClick={handleTagClick}\n  //           //   />\n  //           // ))\n  //           // <JobBoardComponent\n  //           //   job={job}\n  //           //   key={job.id}\n  //           //   handleTagClick={handleTagClick}\n  //           // />\n  //         }\n  //       </div>\n  //     );\n  //   });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-white shadow-md my-16 mx-10 p-6 rounded\",\n      children: filters.length > 0 && filters.map(filter => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleFilterClick(filter),\n        className: \"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\",\n        children: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"jobs are fetching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobBoardComponent, {\n      job: job,\n      handleTagClick: handleTagClick\n    }, job.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"c4K3UnYapn5bWoujYo8X60UV32s=\");\n\n_c = App;\nexport default App; // filteredJobs.map((job) => (\n//   <JobBoardComponent\n//     job={job}\n//     key={job.id}\n//     handleTagClick={handleTagClick}\n//   />\n// ))\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/arehan/Desktop/job-portal/client/src/App.js"],"names":["JobBoardComponent","useState","useEffect","data","ReactPaginate","App","jobs","setJobs","slice","filters","setFilters","jobsPerPage","pagesVisited","pageNumber","changePage","selected","setPageNumber","filterFunc","role","level","tools","languages","length","tags","push","some","tag","includes","filteredJobs","filter","handleTagClick","handleFilterClick","passedFilter","f","map","job","id"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,iBAAP,MAA8B,gCAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACE,IAAI,CAACK,KAAL,CAAW,CAAX,EAAc,EAAd,CAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAGb;;AAEA,QAAMU,WAAW,GAAG,CAApB;AACA,QAAMC,YAAY,GAAGC,UAAU,GAAGF,WAAlC;;AAEA,QAAMG,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACnCC,IAAAA,aAAa,CAACD,QAAD,CAAb;AACD,GAFD;;AAIA,QAAME,UAAU,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAAD,KAAuC;AACxD,QAAIZ,OAAO,CAACa,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAO,IAAP;AACD;;AACD,UAAMC,IAAI,GAAG,CAACL,IAAD,EAAOC,KAAP,CAAb;;AACA,QAAIC,KAAJ,EAAW;AACTG,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGJ,KAAb;AACD;;AACD,QAAIC,SAAJ,EAAe;AACbE,MAAAA,IAAI,CAACC,IAAL,CAAU,GAAGH,SAAb;AACD;;AACD,WAAOE,IAAI,CAACE,IAAL,CAAWC,GAAD,IAASjB,OAAO,CAACkB,QAAR,CAAiBD,GAAjB,CAAnB,CAAP;AACD,GAZD;;AAaA,QAAME,YAAY,GAAGtB,IAAI,CAACuB,MAAL,CAAYZ,UAAZ,CAArB;;AACA,QAAMa,cAAc,GAAIJ,GAAD,IAAS;AAC9B,QAAIjB,OAAO,CAACkB,QAAR,CAAiBD,GAAjB,CAAJ,EAA2B;AAC3BhB,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAaiB,GAAb,CAAD,CAAV;AACD,GAHD;;AAIA,QAAMK,iBAAiB,GAAIC,YAAD,IAAkB;AAC1CtB,IAAAA,UAAU,CAACD,OAAO,CAACoB,MAAR,CAAgBI,CAAD,IAAOA,CAAC,KAAKD,YAA5B,CAAD,CAAV;AACD,GAFD,CA9Ba,CAkCb;;;AAEA9B,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACJ,IAAD,CAAP;AACA,WAAO,MAAM,CAAE,CAAf;AACD,GAHQ,EAGN,EAHM,CAAT,CApCa,CAwCb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,iDAAf;AAAA,gBACGM,OAAO,CAACa,MAAR,GAAiB,CAAjB,IACCb,OAAO,CAACyB,GAAR,CAAaL,MAAD,iBACV;AACE,QAAA,OAAO,EAAE,MAAME,iBAAiB,CAACF,MAAD,CADlC;AAEE,QAAA,SAAS,EAAC,qDAFZ;AAAA,kBAIGA;AAJH;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF,EAYGvB,IAAI,CAACgB,MAAL,KAAgB,CAAhB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAGCM,YAAY,CAACM,GAAb,CAAkBC,GAAD,iBACf,QAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAGE,MAAA,cAAc,EAAEL;AAHlB,OAEOK,GAAG,CAACC,EAFX;AAAA;AAAA;AAAA;AAAA,YADF,CAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GArGQ/B,G;;KAAAA,G;AAuGT,eAAeA,GAAf,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import \"./App.css\";\nimport JobBoardComponent from \"./components/JobBoardComponent\";\nimport { useState, useEffect } from \"react\";\nimport data from \"./assets/data.json\";\nimport ReactPaginate from \"react-paginate\";\nfunction App() {\n  const [jobs, setJobs] = useState(data.slice(0, 30));\n  const [filters, setFilters] = useState([]);\n  // const [pageNumber, setPageNumber] = useState(0);\n\n  const jobsPerPage = 5;\n  const pagesVisited = pageNumber * jobsPerPage;\n\n  const changePage = ({ selected }) => {\n    setPageNumber(selected);\n  };\n\n  const filterFunc = ({ role, level, tools, languages }) => {\n    if (filters.length === 0) {\n      return true;\n    }\n    const tags = [role, level];\n    if (tools) {\n      tags.push(...tools);\n    }\n    if (languages) {\n      tags.push(...languages);\n    }\n    return tags.some((tag) => filters.includes(tag));\n  };\n  const filteredJobs = jobs.filter(filterFunc);\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  };\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter((f) => f !== passedFilter));\n  };\n\n  // const pageCount = Math.ceil(jobs.length / jobsPerPage);\n\n  useEffect(() => {\n    setJobs(data);\n    return () => {};\n  }, []);\n  // const displayJobs = jobs\n  //   .slice(pagesVisited, pagesVisited + jobsPerPage)\n  //   .map((job) => {\n  //     return (\n  //       <div className=\"user\">\n  //         {\n  //           // filteredJobs.map((x) => (\n  //           //   <JobBoardComponent\n  //           //     job={x}\n  //           //     key={x.id}\n  //           //     handleTagClick={handleTagClick}\n  //           //   />\n  //           // ))\n  //           // <JobBoardComponent\n  //           //   job={job}\n  //           //   key={job.id}\n  //           //   handleTagClick={handleTagClick}\n  //           // />\n  //         }\n  //       </div>\n  //     );\n  //   });\n\n  return (\n    <div className=\"App\">\n      <div className=\"flex bg-white shadow-md my-16 mx-10 p-6 rounded\">\n        {filters.length > 0 &&\n          filters.map((filter) => (\n            <span\n              onClick={() => handleFilterClick(filter)}\n              className=\"text-blue-500 bg-blue-100 font-bold m-2 p-2 rounded\"\n            >\n              {filter}\n            </span>\n          ))}\n      </div>\n      {jobs.length === 0 ? (\n        <p>jobs are fetching</p>\n      ) : (\n        filteredJobs.map((job) => (\n          <JobBoardComponent\n            job={job}\n            key={job.id}\n            handleTagClick={handleTagClick}\n          />\n        ))\n      )}\n      {/* {displayJobs}\n      <ReactPaginate\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"pretviousBttn\"}\n        nextLinkClassName={\"nextBttn\"}\n        disabledClassName={\"paginationDisabled\"}\n        activeClassName={\"paginationActive\"}\n      /> */}\n    </div>\n  );\n}\n\nexport default App;\n// filteredJobs.map((job) => (\n//   <JobBoardComponent\n//     job={job}\n//     key={job.id}\n//     handleTagClick={handleTagClick}\n//   />\n// ))\n"]},"metadata":{},"sourceType":"module"}